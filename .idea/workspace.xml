<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="1b7630a3-af09-4834-b006-f78d581c2a77" name="变更" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/error/apiErr/code.go" beforeDir="false" afterPath="$PROJECT_DIR$/common/error/apiErr/code.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/error/rpcErr/rpcErr.go" beforeDir="false" afterPath="$PROJECT_DIR$/common/error/rpcErr/rpcErr.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/model/task.go" beforeDir="false" afterPath="$PROJECT_DIR$/common/model/task.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/http/apis/dto/dto.api" beforeDir="false" afterPath="$PROJECT_DIR$/service/http/apis/dto/dto.api" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/http/apis/task.api" beforeDir="false" afterPath="$PROJECT_DIR$/service/http/apis/task.api" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/http/internal/handler/task/adminSetTaskHandler.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/http/internal/handler/task/adminSetTaskHandler.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/http/internal/handler/task/taskInitHandler.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/service/http/internal/handler/user/registerHandler.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/http/internal/handler/user/registerHandler.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/http/internal/logic/task/adminCheckTaskLogic.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/http/internal/logic/task/adminCheckTaskLogic.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/http/internal/logic/task/adminSetTaskLogic.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/http/internal/logic/task/adminSetTaskLogic.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/http/internal/logic/task/adminTaskInfoLogic.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/http/internal/logic/task/adminTaskInfoLogic.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/http/internal/logic/task/failTaskListLogic.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/http/internal/logic/task/failTaskListLogic.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/http/internal/logic/task/taskInfoLogic.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/http/internal/logic/task/taskInfoLogic.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/http/internal/logic/task/taskInitLogic.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/service/http/internal/logic/task/taskListLogic.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/http/internal/logic/task/taskListLogic.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/http/internal/logic/user/registerLogic.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/http/internal/logic/user/registerLogic.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/http/internal/types/types.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/http/internal/types/types.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/rpc/task/internal/logic/adminCheckTaskLogic.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/service/rpc/task/internal/logic/failTaskListLogic.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/rpc/task/internal/logic/failTaskListLogic.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/rpc/task/internal/logic/getTaskListLogic.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/rpc/task/internal/logic/getTaskListLogic.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/rpc/task/internal/logic/taskInfoLogic.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/rpc/task/internal/logic/taskInfoLogic.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/rpc/task/internal/logic/taskInitLogic.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/rpc/task/internal/logic/taskInitLogic.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/rpc/task/internal/logic/taskSetLogic.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/rpc/task/internal/logic/taskSetLogic.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/rpc/task/internal/server/taskServer.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/rpc/task/internal/server/taskServer.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/rpc/task/task.proto" beforeDir="false" afterPath="$PROJECT_DIR$/service/rpc/task/task.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/rpc/task/taskclient/task.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/rpc/task/taskclient/task.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/rpc/task/types/task/task.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/rpc/task/types/task/task.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/rpc/task/types/task/task_grpc.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/rpc/task/types/task/task_grpc.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/rpc/user/internal/server/userServer.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/rpc/user/internal/server/userServer.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/rpc/user/types/user/user.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/rpc/user/types/user/user.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/rpc/user/types/user/user_grpc.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/rpc/user/types/user/user_grpc.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/rpc/user/user.proto" beforeDir="false" afterPath="$PROJECT_DIR$/service/rpc/user/user.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/rpc/user/userclient/user.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/rpc/user/userclient/user.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://C:/Program Files/Go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2eqtqgmuHx9EbYYkyimkyjUrHTf" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.format.on.save.advertiser.fired&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;D:/codeProject/Go_WorkSpace/orientation-platform&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="D:\codeProject\Go_WorkSpace\orientation-platform\common" />
      <recent name="D:\codeProject\Go_WorkSpace\orientation-platform\common\error\rpcErr" />
      <recent name="D:\codeProject\Go_WorkSpace\orientation-platform\common\error\apiErr" />
    </key>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="应用程序级" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>