// Code generated by goctl. DO NOT EDIT.
// Source: ad.proto

package server

import (
	"context"

	"orientation-platform/service/rpc/ad/internal/logic"
	"orientation-platform/service/rpc/ad/internal/svc"
	"orientation-platform/service/rpc/ad/types/ad"
)

type AdServer struct {
	svcCtx *svc.ServiceContext
	ad.UnimplementedAdServer
}

func NewAdServer(svcCtx *svc.ServiceContext) *AdServer {
	return &AdServer{
		svcCtx: svcCtx,
	}
}

func (s *AdServer) AdminSetAd(ctx context.Context, in *ad.AdminSetAdRequest) (*ad.Empty, error) {
	l := logic.NewAdminSetAdLogic(ctx, s.svcCtx)
	return l.AdminSetAd(in)
}

func (s *AdServer) CheckCost(ctx context.Context, in *ad.CheckCostRequest) (*ad.CheckCostReply, error) {
	l := logic.NewCheckCostLogic(ctx, s.svcCtx)
	return l.CheckCost(in)
}

func (s *AdServer) AdList(ctx context.Context, in *ad.Empty) (*ad.AdListReply, error) {
	l := logic.NewAdListLogic(ctx, s.svcCtx)
	return l.AdList(in)
}

func (s *AdServer) AdInfo(ctx context.Context, in *ad.AdInfoRequest) (*ad.AdInfoReply, error) {
	l := logic.NewAdInfoLogic(ctx, s.svcCtx)
	return l.AdInfo(in)
}

func (s *AdServer) ClickAd(ctx context.Context, in *ad.ClickAdRequest) (*ad.Empty, error) {
	l := logic.NewClickAdLogic(ctx, s.svcCtx)
	return l.ClickAd(in)
}

func (s *AdServer) SendAd(ctx context.Context, in *ad.SendAdRequest) (*ad.SendAdReply, error) {
	l := logic.NewSendAdLogic(ctx, s.svcCtx)
	return l.SendAd(in)
}
