syntax = "proto3";

package task;

option go_package = "./task";

// 空消息
message Empty {}

// 任务信息结构体
message TaskInfo {
  int64 Id = 1;
  int64 UserId = 2;
  string Title = 3;
  int64 Type = 4;
  string Text = 5;
  string Question_url = 6;
  string Answer_url = 7;
  int64 Bonus = 8;
  int64 State = 9;
}

//Rank 结构体
message Rank {
  int64 Rank = 1;
  int64 Id = 2;
  string Name = 3;
  string AvatarUrl = 4;
  int64 Point = 5;
}

service Task {
  rpc GetTaskList(GetTaskListRequest) returns (TaskListReply);
  rpc TaskSet(TaskSetRequest) returns (Empty);
  rpc TaskInit(TaskInitRequest) returns (Empty);  //用于给用户的任务初始化，用于taskinfo接口，没查询到自动初始化
  rpc DoTask(DoTaskRequest) returns (DoTaskReply);
  rpc TaskInfo(TaskInfoRequest) returns (TaskInfoReply);
  rpc Rank(RankRequest) returns (RankReply);  //排序按照最晚完成的任务时间，按照task的UpdateTime比较，在UserRpc的对应排序之后
  rpc FailTaskList(Empty) returns (FailTaskListReply);
  rpc FailTask (AdminCheckTaskRequest) returns (Empty);
  rpc SuccessTask (AdminCheckTaskRequest) returns (Empty);
  rpc TaskVisual(Empty) returns (TaskVisualReply);
}

message GetTaskListRequest {
  int64 UserId = 1;
}

message TaskSetRequest{
  string Collage = 1;
  string Title = 3;
  int64 Type = 4;
  string Text = 5;
  string QuestionUrl = 6;
  string ReferAnswerUrl = 7;
  int64 Bonus = 8;
}

message TaskInitRequest {
  int64 UserId = 1;
  string Collage = 2;
}

message TaskListReply {
  repeated TaskInfo TaskList = 1;
}

message DoTaskRequest {
  int64 TaskId = 1;
}

message DoTaskReply {
  int64 state = 1;
}

message TaskInfoRequest {
  int64  TaskId = 1;
}

message TaskInfoReply {
  TaskInfo Task = 1;
}

message RankRequest {
  repeated Rank Rank = 1;
}

message RankReply {
  repeated Rank Rank = 1;
}

message FailTaskListReply {
  repeated TaskInfo FailTaskList = 1;
}

message AdminCheckTaskRequest {
  int64 TaskId = 1;
  int64 ActionType = 2;
}

message TaskVisualReply {
  bytes image_data = 1;
}